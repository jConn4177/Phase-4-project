"""Added Category Enum, mapped relationships for User/Product

Revision ID: d143f2bb9806
Revises: 4fa4a0b78bb3
Create Date: 2023-10-18 19:03:55.295666

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd143f2bb9806'
down_revision = '4fa4a0b78bb3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('product_categories',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('product_id', 'category_id')
    )
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('count', sa.Integer(), nullable=False))
        batch_op.alter_column('category',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Enum('Aviator', 'Wayfarer', 'Round', 'Sports', 'Designer', 'Oversized', 'Cat-Eye'),
               nullable=True)
        batch_op.drop_column('inventory')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('inventory', sa.INTEGER(), nullable=False))
        batch_op.alter_column('category',
               existing_type=sa.Enum('Aviator', 'Wayfarer', 'Round', 'Sports', 'Designer', 'Oversized', 'Cat-Eye'),
               type_=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.drop_column('count')

    op.drop_table('product_categories')
    op.drop_table('category')
    # ### end Alembic commands ###
